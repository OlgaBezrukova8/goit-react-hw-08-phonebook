{"version":3,"file":"static/js/969.2d51c2a0.chunk.js","mappings":"6MAAaA,EAAY,SAAC,GAAD,SAAGC,QAEfC,EAAsB,SAACC,EAAUF,GAC5C,GAAIA,EAAQ,CACV,IAAMG,EAAmBH,EAAOI,cAChC,OAAOF,EAASF,QAAO,qBAAGK,KACnBD,cAAcE,SAASH,MAG9B,OAAOD,G,2BCPEK,EAAYC,EAAAA,GAAAA,IAAH,wCAITC,EAAQD,EAAAA,GAAAA,MAAH,gFAOLE,EAAQF,EAAAA,GAAAA,MAAH,6O,SCVLG,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpB,SAACN,EAAD,WACE,UAACE,EAAD,oCAEE,SAACC,EAAD,CAAOI,KAAK,OAAOF,MAAOA,EAAOC,SAAUA,U,kBCLpCN,EAAYC,EAAAA,GAAAA,IAAH,wCAITO,EAAOP,EAAAA,GAAAA,GAAH,mHASJQ,EAAOR,EAAAA,GAAAA,EAAH,0CAIJS,EAAST,EAAAA,GAAAA,OAAH,oFCfNU,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5B,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAExB,OACE,8BACGrB,EAAoBkB,GAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAInB,EAAP,EAAOA,KAAMoB,EAAb,EAAaA,OAAb,OAC7B,UAACV,EAAD,YACE,UAACC,EAAD,WACGX,EADH,KACWoB,MAEX,SAACR,EAAD,CAAQS,QAAS,kBAAML,EAAcG,IAAKG,SAAUL,EAApD,sBAJSE,S,SCCNI,EAAc,WACzB,OAAoCC,EAAAA,EAAAA,MAA5BV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,WACf/B,GAASgC,EAAAA,EAAAA,IAAYjC,GAE3B,OACE,SAAC,EAAD,WACE,0BACG+B,IAAS,uBAAIA,EAAMG,UACnBF,GACC,SAACG,EAAA,EAAD,KAEA,SAAChB,EAAD,CAAaC,KAAMlB,EAAoBkB,EAAMnB,WCEvD,EAhBsB,WACpB,IAAMA,GAASgC,EAAAA,EAAAA,IAAYjC,GACrBoC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,SAACzB,EAAD,CAAQC,MAAOZ,EAAQa,SANP,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACrBF,GAASG,EAAAA,EAAAA,GAAUD,EAAOzB,YAMxB,SAACgB,EAAD,S,oBCnBS,SAASW,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACH7B,MAAO+B,OAAOC,OAAOH,O","sources":["redux/filter/filter-selectors.js","components/Filter/Filter.module.js","components/Filter/Filter.jsx","components/ContactList/ContactList.module.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/PhonebookPage/PhonebookPage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n\nexport const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  } else {\n    return contacts;\n  }\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n\n`;\n","import { Label, Input, Container } from './Filter.module';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => (\n  <Container>\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  </Container>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Item = css.li`\ndisplay: flex;\nalign-items: center;\n\n&:not(:last-child) {\n    margin-bottom: 10px;\n}\n`;\n\nexport const Text = css.p`\nfont-size: 14px;\n`;\n\nexport const Button = css.button`\npadding: 6px 18px;\nmargin-left: 16px;\n\nfont-size: 10px;\n`;\n","import { useDeleteContactMutation } from '../../../redux/contacts/contacts-slice';\nimport { Item, Button, Text } from '../ContactList.module';\nimport { getFilteredContacts } from '../../../redux/filter/filter-selectors';\n\nexport const ContactItem = ({ data }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      {getFilteredContacts(data).map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          <Button onClick={() => deleteContact(id)} disabled={isLoading}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { Loader } from '../Loader/Loader';\nimport { Container } from './ContactList.module';\nimport {\n  getFilteredContacts,\n  getFilter,\n} from '../../redux/filter/filter-selectors';\nimport { useGetContactQuery } from '../../redux/contacts/contacts-slice';\n\nexport const ContactList = () => {\n  const { data, error, isFetching } = useGetContactQuery();\n  const filter = useSelector(getFilter);\n\n  return (\n    <Container>\n      <ul>\n        {error && <p>{error.message}</p>}\n        {isFetching ? (\n          <Loader />\n        ) : (\n          <ContactItem data={getFilteredContacts(data, filter)} />\n        )}\n      </ul>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-actions';\n\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nconst PhonebookPage = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <>\n      <Filter value={filter} onChange={onSetFilter} />\n      <ContactList />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["getFilter","filter","getFilteredContacts","contacts","normalizedFilter","toLowerCase","name","includes","Container","css","Label","Input","Filter","value","onChange","type","Item","Text","Button","ContactItem","data","useDeleteContactMutation","deleteContact","isLoading","map","id","number","onClick","disabled","ContactList","useGetContactQuery","error","isFetching","useSelector","message","Loader","dispatch","useDispatch","target","setFilter","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}