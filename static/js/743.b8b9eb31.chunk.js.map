{"version":3,"file":"static/js/743.b8b9eb31.chunk.js","mappings":"qQAEaA,EAAYC,EAAAA,GAAAA,IAAH,wCAITC,EAAQD,EAAAA,GAAAA,MAAH,sGAQLE,EAAQF,EAAAA,GAAAA,MAAH,2O,SCXLG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACL,SAATP,EAAkBC,EAAQM,GAASJ,EAAUI,IAU/C,OACE,SAACd,EAAD,WACE,kBAAMK,SATU,SAAAO,GACdP,EAASO,KACXJ,EAAQ,IACRE,EAAU,MAMV,WACE,UAACR,EAAD,mBAEE,SAACC,EAAD,CACEY,KAAK,OACLR,KAAK,OACLS,SAAUL,EACVG,MAAOP,EACPU,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,UAACjB,EAAD,qBAEE,SAACC,EAAD,CACEW,MAAOL,EACPO,SAAUL,EACVI,KAAK,SACLR,KAAK,MACLU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQJ,KAAK,SAAb,+B,SCTR,EAjCqB,WACnB,OAAqBK,EAAAA,EAAAA,MAAdC,GAAP,eACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAEFC,EAAW,SAAAC,GAIf,OAA8B,IAHVJ,EAASK,QAC3B,SAAAC,GAAO,OAAIA,EAAQrB,OAASmB,KAEXG,QAGfC,EAAY,mCAAG,WAAMlB,GAAN,gFACnBA,EAAMmB,iBADa,EAGGnB,EAAMC,OAApBN,EAHW,EAGXA,KAAMyB,EAHK,EAGLA,IACRJ,EAAU,CAAEK,GAAI1B,EAAKO,MAAOP,KAAMA,EAAKO,MAAOL,OAAQuB,EAAIlB,QAE5DW,EAASlB,EAAKO,OANC,uBAOjBoB,EAAAA,OAAAA,QAAA,UAAkB3B,EAAKO,MAAvB,4BAPiB,mBAQV,GARU,gCAWXO,EAAWO,GAXA,OAYjBM,EAAAA,OAAAA,QAAe,iBAZE,kDAcjBA,EAAAA,OAAAA,QAAe,wBACfC,QAAQC,IAAR,MAfiB,0DAAH,sDAmBlB,OAAO,SAAChC,EAAD,CAAaC,SAAUyB","sources":["components/ContactForm/ContactForm.module.js","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\nmargin-bottom: 20px;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n`;\n","import { useState } from 'react';\nimport { Container, Label, Input } from './ContactForm.module';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleReset = event => {\n    if (onSubmit(event)) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleReset}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            value={number}\n            onChange={handleChange}\n            type=\"number\"\n            name=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Container>\n  );\n};\n","import { Notify } from 'notiflix';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\n\nimport { useAddContactMutation } from '../../redux/contacts/contacts-slice';\nimport { useGetContactQuery } from '../../redux/contacts/contacts-slice';\n\nconst ContactsPage = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useGetContactQuery();\n\n  const isExists = contactName => {\n    const arrayFilter = contacts.filter(\n      contact => contact.name === contactName\n    );\n    return arrayFilter.length !== 0;\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const { name, tel } = event.target;\n    const contact = { id: name.value, name: name.value, number: tel.value };\n\n    if (isExists(name.value)) {\n      Notify.warning(`${name.value} is already in contacts`);\n      return false;\n    }\n    try {\n      await addContact(contact);\n      Notify.success('Contact added');\n    } catch (error) {\n      Notify.failure('Error adding contact');\n      console.log(error);\n    }\n  };\n\n  return <ContactForm onSubmit={handleSubmit} />;\n};\n\nexport default ContactsPage;\n"],"names":["Container","css","Label","Input","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","type","onChange","pattern","title","required","useAddContactMutation","addContact","contacts","useGetContactQuery","data","isExists","contactName","filter","contact","length","handleSubmit","preventDefault","tel","id","Notify","console","log"],"sourceRoot":""}