{"version":3,"file":"static/js/412.b16fab9c.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","components/Filter/Filter.module.js","components/Filter/Filter.jsx","components/ContactList/ContactList.module.js","components/ContactList/ContactItem/ContactItem.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.module.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/phonebookPage.module.css?b3f6","pages/PhonebookPage/PhonebookPage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n\nexport const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  } else {\n    return contacts;\n  }\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n\n`;\n","import { Label, Input, Container } from './Filter.module';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => (\n  <Container>\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  </Container>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Item = css.li`\ndisplay: flex;\nalign-items: center;\n\n&:not(:last-child) {\n    margin-bottom: 10px;\n}\n`;\n\nexport const Text = css.p`\nfont-size: 14px;\n`;\n\nexport const Button = css.button`\npadding: 6px 18px;\nmargin-left: 16px;\n\nfont-size: 10px;\n`;\n","import { Item, Button, Text } from '../ContactList.module';\nimport { getFilteredContacts } from '../../../redux/filter/filter-selectors';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\n\nexport const ContactItem = ({ data }) => {\n  return (\n    <>\n      {getFilteredContacts(data).map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          {/* {TODO: add disabled={isLoading} to button} */}\n\n          {/* <Button onClick={() => deleteContact(id)} disabled={isLoading}> */}\n          <Button onClick={() => deleteContact(id)}>Delete</Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","export const getContact = ({ contacts }) => contacts.contacts;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\n// import { Loader } from '../Loader/Loader';\nimport { Container } from './ContactList.module';\nimport {\n  getFilteredContacts,\n  getFilter,\n} from '../../redux/filter/filter-selectors';\nimport { getContact } from '../../redux/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContact);\n\n  return (\n    <Container>\n      <ul>\n        <ContactItem data={getFilteredContacts(contacts, filter)} />\n      </ul>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\nmargin-bottom: 20px;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\n\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContact } from '../../redux/contacts/contacts-selectors';\nimport { Container, Label, Input } from './ContactForm.module';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const isExists = contactName => {\n    const arrayFilter = contacts.filter(\n      contact => contact.name === contactName\n    );\n    return arrayFilter.length !== 0;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isExists(name)) {\n      Notify.warning(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n    return true;\n  };\n\n  const handleReset = event => {\n    if (handleSubmit(event)) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleReset}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            value={number}\n            onChange={handleChange}\n            type=\"number\"\n            name=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Container>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"phonebookPage_container__Pzk9D\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-actions';\n\n// import { Loader } from '../../components/Loader/Loader';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { getToken } from '../../redux/auth/auth-selectors';\nimport styles from './phonebookPage.module.css';\n\nconst PhonebookPage = () => {\n  const filter = useSelector(getFilter);\n  const token = useSelector(getToken);\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.container}>\n      {/* TODO: add loader to contact list*/}\n      {!token ? (\n        <Navigate to=\"/\" />\n      ) : (\n        <>\n          <div>\n            <Filter value={filter} onChange={onSetFilter} />\n            <ContactList />\n          </div>\n          <div>\n            <ContactForm />\n          </div>\n        </>\n      )}\n      {/* {error && <p>{error.message}</p>}\n      {isFetching ? (\n        <Loader />\n      ) : ( */}\n\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["getFilter","filter","getFilteredContacts","contacts","normalizedFilter","toLowerCase","name","includes","Container","css","Label","Input","Filter","value","onChange","type","Item","Text","Button","ContactItem","data","map","id","number","onClick","deleteContact","getContact","ContactList","useSelector","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","target","handleSubmit","preventDefault","contactName","contact","length","Notify","addContact","onSubmit","pattern","title","required","token","getToken","className","styles","setFilter","to","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}