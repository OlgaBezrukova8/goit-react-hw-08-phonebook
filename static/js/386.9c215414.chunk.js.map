{"version":3,"file":"static/js/386.9c215414.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","shared/hooks/useContacts.js","components/ContactUpdateForm/ContactUpdateForm.jsx","webpack://react-homework-template/./src/components/ContactModal/contactModal.module.css?b111","components/ContactModal/ContactModal.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n\nexport const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  } else {\n    return contacts;\n  }\n};\n","import PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\n\nexport const Filter = ({ value, onChange }) => (\n  <Form>\n    <Form.Group className=\"mb-3\" controlId=\"formBasicFilter\">\n      <Form.Label className=\"mb-1\"> Find contacts by name</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      />\n    </Form.Group>\n  </Form>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","export const getContact = ({ contacts }) => contacts.contacts;\nexport const getIsLoading = ({ contacts }) => contacts.isLoading;\n","import { useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  return isLoading;\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { updateContact } from 'redux/contacts/contacts-operations';\n\nimport { BasicButton } from '../BasicButton/BasicButton';\nimport { Container, Form } from 'react-bootstrap';\n\nexport const ContactUpdateForm = ({ contact, hideModal }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const onUpdateContact = id => {\n    dispatch(updateContact({ id, name, number }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onUpdateContact(contact.id);\n    hideModal();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className=\"mb-1\">Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter new user name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n          <Form.Label className=\"mb-1\">Number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"Enter new user number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Group>\n\n        <BasicButton\n          variant=\"outline-success\"\n          type=\"submit\"\n          onClick={() => onUpdateContact}\n        >\n          Update\n        </BasicButton>\n        <BasicButton\n          className=\"ms-3\"\n          variant=\"outline-warning\"\n          type=\"submit\"\n          onClick={() => hideModal()}\n        >\n          Cancel\n        </BasicButton>\n      </Form>\n    </Container>\n  );\n};\n\nContactUpdateForm.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"contactModal_modal__WUwky\",\"modal_content\":\"contactModal_modal_content__YObJU\"};","import { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { ContactUpdateForm } from 'components/ContactUpdateForm/ContactUpdateForm';\nimport styles from './contactModal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactModal = ({ showModal, contact, hideModal }) => {\n  if (!showModal) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={styles.modal}>\n      <div className=\"bg-light p-5 rounded\">\n        <h2 className=\"mb-4\">Update your contact</h2>\n        <ContactUpdateForm contact={contact} hideModal={hideModal} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nContactModal.propTypes = {\n  contacts: PropTypes.array,\n  showModal: PropTypes.bool.isRequired,\n  hideModal: PropTypes.func.isRequired,\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/filter/filter-selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { BasicButton } from 'components/BasicButton/BasicButton';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport const ContactItem = ({ data }) => {\n  const [contact, setContact] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useContacts();\n\n  return (\n    <>\n      <ContactModal\n        showModal={showModal}\n        contact={contact}\n        hideModal={() => setShowModal(false)}\n      />\n      {getFilteredContacts(data).map(({ id, name, number }) => (\n        <ListGroup.Item\n          variant=\"primary\"\n          className=\"d-flex p-2 align-items-center\"\n          key={id}\n        >\n          <p className=\"text-black\">\n            {name}: {number}\n          </p>\n\n          <BasicButton\n            className=\"mx-3\"\n            onClick={() => {\n              setContact({ id, name, number });\n              setShowModal(true);\n            }}\n            disabled={isLoading}\n          >\n            Update\n          </BasicButton>\n\n          <BasicButton\n            onClick={() => dispatch(deleteContact(id))}\n            disabled={isLoading}\n          >\n            Delete\n          </BasicButton>\n        </ListGroup.Item>\n      ))}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { getFilteredContacts, getFilter } from 'redux/filter/filter-selectors';\nimport { getContact } from 'redux/contacts/contacts-selectors';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContact);\n\n  return (\n    <ListGroup >\n      <ContactItem data={getFilteredContacts(contacts, filter)} />\n    </ListGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { getContact } from 'redux/contacts/contacts-selectors';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nimport { BasicButton } from 'components/BasicButton/BasicButton';\nimport { Form } from 'react-bootstrap';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n  const isLoading = useContacts();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const isExists = contactName => {\n    const arrayFilter = contacts.filter(\n      contact => contact.name === contactName\n    );\n    return arrayFilter.length !== 0;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isExists(name)) {\n      Notify.warning(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n    return true;\n  };\n\n  const handleReset = event => {\n    if (handleSubmit(event)) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleReset}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label className=\"mb-1\">Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n        <Form.Label className=\"mb-1\">Number</Form.Label>\n        <Form.Control\n          type=\"number\"\n          name=\"tel\"\n          placeholder=\"Enter number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Form.Group>\n      <div className=\"d-grid\">\n        <BasicButton\n          className=\"mt-1\"\n          size=\"md\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          Add contact\n        </BasicButton>\n      </div>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-actions';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { useAuth } from 'shared/hooks/useAuth';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nimport Container from 'react-bootstrap/Container';\n\nconst PhonebookPage = () => {\n  const filter = useSelector(getFilter);\n  const isLoggedIn = useAuth();\n  const isLoading = useContacts();\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <Container className=\"d-flex pt-4\">\n      {isLoading && <Loader />}\n      {!isLoggedIn ? (\n        <Navigate to=\"/\" />\n      ) : (\n        <>\n          <div className=\"w-50 me-5\">\n            <Filter value={filter} onChange={onSetFilter} />\n            <ContactList />\n          </div>\n          <div className=\"w-50\">\n            <ContactForm />\n          </div>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["getFilter","filter","getFilteredContacts","contacts","normalizedFilter","toLowerCase","name","includes","Filter","value","onChange","Form","className","controlId","type","placeholder","getContact","getIsLoading","isLoading","useContacts","useSelector","ContactUpdateForm","contact","hideModal","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","event","target","onUpdateContact","id","updateContact","Container","onSubmit","preventDefault","pattern","title","required","BasicButton","variant","onClick","modalRoot","document","querySelector","ContactModal","showModal","createPortal","styles","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","ContactItem","data","setContact","setShowModal","map","deleteContact","ContactList","ContactForm","handleSubmit","contactName","length","Notify","addContact","size","isLoggedIn","useAuth","Loader","setFilter","to"],"sourceRoot":""}