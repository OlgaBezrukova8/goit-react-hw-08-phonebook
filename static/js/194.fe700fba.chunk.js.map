{"version":3,"file":"static/js/194.fe700fba.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","components/Filter/Filter.module.js","components/Filter/Filter.jsx","components/ContactList/ContactList.module.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.module.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/phonebookPage.module.css?b3f6","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n\nexport const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  } else {\n    return contacts;\n  }\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n\n`;\n","import { Label, Input, Container } from './Filter.module';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => (\n  <Container>\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  </Container>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Item = css.li`\ndisplay: flex;\nalign-items: center;\n\n&:not(:last-child) {\n    margin-bottom: 10px;\n}\n`;\n\nexport const Text = css.p`\nfont-size: 14px;\n`;\n\nexport const Button = css.button`\npadding: 6px 18px;\nmargin-left: 16px;\n\nfont-size: 10px;\n`;\n","import { useDeleteContactMutation } from '../../../redux/contacts/contacts-slice';\nimport { Item, Button, Text } from '../ContactList.module';\nimport { getFilteredContacts } from '../../../redux/filter/filter-selectors';\n\nexport const ContactItem = ({ data }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      {getFilteredContacts(data).map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          <Button onClick={() => deleteContact(id)} disabled={isLoading}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\n// import { Loader } from '../Loader/Loader';\nimport { Container } from './ContactList.module';\nimport {\n  getFilteredContacts,\n  getFilter,\n} from '../../redux/filter/filter-selectors';\n// import { useGetContactQuery } from '../../redux/contacts/contacts-slice';\n\nexport const ContactList = ({ contacts }) => {\n  // const { data, error, isFetching } = useGetContactQuery();\n  const filter = useSelector(getFilter);\n\n  return (\n    <Container>\n      <ul>\n        <ContactItem data={getFilteredContacts(contacts, filter)} />\n      </ul>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\nmargin-bottom: 20px;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport {\n  useAddContactMutation,\n  // useGetContactQuery,\n} from '../../redux/contacts/contacts-slice';\nimport { Container, Label, Input } from './ContactForm.module';\n\nexport const ContactForm = ({ contacts }) => {\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const isExists = contactName => {\n    const arrayFilter = contacts.filter(\n      contact => contact.name === contactName\n    );\n    return arrayFilter.length !== 0;\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // const { name, tel } = event.target;\n    const contact = { id: name, name: name, number: number };\n\n    if (isExists(name)) {\n      Notify.warning(`${name} is already in contacts`);\n      return false;\n    }\n\n    try {\n      await addContact(contact);\n      Notify.success('Contact added');\n    } catch (error) {\n      Notify.failure('Error adding contact');\n      console.log(error);\n    }\n  };\n\n  const handleReset = event => {\n    if (handleSubmit(event)) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleReset}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            value={number}\n            onChange={handleChange}\n            type=\"number\"\n            name=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Container>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"phonebookPage_container__Pzk9D\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-actions';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { useGetContactQuery } from '../../redux/contacts/contacts-slice';\nimport styles from './phonebookPage.module.css';\n\nconst PhonebookPage = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const { data, error, isFetching } = useGetContactQuery();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.container}>\n      {/* TODO: add loader to contact list*/}\n\n      {error && <p>{error.message}</p>}\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <>\n          <div>\n            <Filter value={filter} onChange={onSetFilter} />\n            <ContactList contacts={data} />\n          </div>\n          <div>\n            <ContactForm contacts={data} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["getFilter","filter","getFilteredContacts","contacts","normalizedFilter","toLowerCase","name","includes","Container","css","Label","Input","Filter","value","onChange","type","Item","Text","Button","ContactItem","data","useDeleteContactMutation","deleteContact","isLoading","map","id","number","onClick","disabled","ContactList","useSelector","ContactForm","useAddContactMutation","addContact","useState","setName","setNumber","handleChange","event","target","isExists","contactName","contact","length","handleSubmit","preventDefault","Notify","console","log","onSubmit","pattern","title","required","dispatch","useDispatch","useGetContactQuery","error","isFetching","className","styles","message","Loader","setFilter"],"sourceRoot":""}