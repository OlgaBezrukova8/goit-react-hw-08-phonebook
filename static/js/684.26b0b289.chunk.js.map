{"version":3,"file":"static/js/684.26b0b289.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","shared/hooks/useContacts.js","components/ContactUpdateForm/ContactUpdateForm.jsx","webpack://react-homework-template/./src/components/ContactModal/contactModal.module.css?b111","components/ContactModal/ContactModal.jsx","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n\nexport const getFilteredContacts = (contacts, filter) => {\n  if (filter) {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  } else {\n    return contacts;\n  }\n};\n","import PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\n\nexport const Filter = ({ value, onChange }) => (\n  <Form>\n    <Form.Group className=\"mb-3\" controlId=\"formBasicFilter\">\n      <Form.Label> Find contacts by name</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      />\n    </Form.Group>\n  </Form>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","export const getContact = ({ contacts }) => contacts.contacts;\nexport const getIsLoading = ({ contacts }) => contacts.isLoading;\n","import { useSelector } from 'react-redux';\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  return isLoading;\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { updateContact } from 'redux/contacts/contacts-operations';\n\nimport { BasicButton } from '../BasicButton/BasicButton';\nimport { Container, Form } from 'react-bootstrap';\n\nexport const ContactUpdateForm = ({ contact, hideModal }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const onUpdateContact = id => {\n    dispatch(updateContact({ id, name, number }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onUpdateContact(contact.id);\n    hideModal();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className=\"mb-1\">Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter new user name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n          <Form.Label className=\"mb-1\">Number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"Enter new user number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Group>\n\n        <BasicButton\n          variant=\"outline-success\"\n          type=\"submit\"\n          onClick={() => onUpdateContact}\n        >\n          Update\n        </BasicButton>\n        <BasicButton\n          className=\"ms-3\"\n          variant=\"outline-warning\"\n          type=\"submit\"\n          onClick={() => hideModal()}\n        >\n          Cancel\n        </BasicButton>\n      </Form>\n    </Container>\n  );\n};\n\nContactUpdateForm.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"contactModal_modal__WUwky\",\"modal_content\":\"contactModal_modal_content__YObJU\"};","import { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { ContactUpdateForm } from 'components/ContactUpdateForm/ContactUpdateForm';\nimport styles from './contactModal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactModal = ({ showModal, contact, hideModal }) => {\n  if (!showModal) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={styles.modal}>\n      <div className=\"bg-light p-5 rounded\">\n        <h2 className=\"mb-4\">Update your contact</h2>\n        <ContactUpdateForm contact={contact} hideModal={hideModal} />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nContactModal.propTypes = {\n  contacts: PropTypes.array,\n  showModal: PropTypes.bool.isRequired,\n  hideModal: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"active\", \"eventKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\n\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n\n    if (key == null) {\n      return;\n    }\n\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: Component = Button,\n    active,\n    eventKey\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options)); // @ts-ignore\n\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    onSelect,\n    activeKey,\n    role,\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/filter/filter-selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { BasicButton } from 'components/BasicButton/BasicButton';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport const ContactItem = ({ data }) => {\n  const [contact, setContact] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useContacts();\n\n  return (\n    <>\n      <ContactModal\n        showModal={showModal}\n        contact={contact}\n        hideModal={() => setShowModal(false)}\n      />\n      {getFilteredContacts(data).map(({ id, name, number }) => (\n        <ListGroup.Item className=\"d-flex p-2 align-items-center\" key={id}>\n          <p>\n            {name}: {number}\n          </p>\n\n          <BasicButton\n            className=\"mx-3\"\n            onClick={() => {\n              setContact({ id, name, number });\n              setShowModal(true);\n            }}\n            disabled={isLoading}\n          >\n            Update\n          </BasicButton>\n\n          <BasicButton\n            onClick={() => dispatch(deleteContact(id))}\n            disabled={isLoading}\n          >\n            Delete\n          </BasicButton>\n        </ListGroup.Item>\n      ))}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { getFilteredContacts, getFilter } from 'redux/filter/filter-selectors';\nimport { getContact } from 'redux/contacts/contacts-selectors';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContact);\n\n  return (\n    <ListGroup variant=\"flush\">\n      <ContactItem data={getFilteredContacts(contacts, filter)} />\n    </ListGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { getContact } from 'redux/contacts/contacts-selectors';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nimport { BasicButton } from 'components/BasicButton/BasicButton';\nimport { Container, Form } from 'react-bootstrap';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n  const isLoading = useContacts();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const isExists = contactName => {\n    const arrayFilter = contacts.filter(\n      contact => contact.name === contactName\n    );\n    return arrayFilter.length !== 0;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isExists(name)) {\n      Notify.warning(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n    return true;\n  };\n\n  const handleReset = event => {\n    if (handleSubmit(event)) {\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleReset}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"tel\"\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Group>\n\n        <BasicButton type=\"submit\" disabled={isLoading}>\n          Add contact\n        </BasicButton>\n      </Form>\n    </Container>\n  );\n};\n\nContactForm.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-actions';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { useAuth } from 'shared/hooks/useAuth';\nimport { useContacts } from 'shared/hooks/useContacts';\n\nconst PhonebookPage = () => {\n  const filter = useSelector(getFilter);\n  const isLoggedIn = useAuth();\n  const isLoading = useContacts();\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className=\"container d-flex justify-content-between\">\n      {isLoading && <Loader />}\n      {!isLoggedIn ? (\n        <Navigate to=\"/\" />\n      ) : (\n        <>\n          <div>\n            <Filter value={filter} onChange={onSetFilter} />\n            <ContactList />\n          </div>\n          <div>\n            <ContactForm />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["getFilter","filter","getFilteredContacts","contacts","normalizedFilter","toLowerCase","name","includes","Filter","value","onChange","Form","className","controlId","type","placeholder","getContact","getIsLoading","isLoading","useContacts","useSelector","ContactUpdateForm","contact","hideModal","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","event","target","onUpdateContact","id","updateContact","Container","onSubmit","preventDefault","pattern","title","required","BasicButton","variant","onClick","modalRoot","document","querySelector","ContactModal","showModal","createPortal","styles","NavContext","React","displayName","_excluded","useNavItem","key","active","role","disabled","parentOnSelect","useContext","SelectableContext","navContext","tabContext","TabContext","isActive","props","contextControllerId","getControllerId","contextControlledId","getControlledId","dataAttr","activeKey","unmountOnExit","mountOnEnter","tabIndex","useEventCallback","e","isPropagationStopped","NavItem","_ref","ref","as","Component","Button","eventKey","options","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","makeEventKey","href","meta","_jsx","noop","EVENT_KEY_ATTR","Nav","onSelect","onKeyDown","forceUpdate","useReducer","state","needsRefocusRef","useRef","listNode","getNextActiveTab","offset","currentListNode","current","items","qsa","activeChild","activeElement","index","nextIndex","handleSelect","useEffect","focus","mergedRef","useMergedRefs","children","nextActiveChild","dataset","dataProp","Item","ListGroupItem","bsPrefix","action","useBootstrapPrefix","navItemProps","handleClick","stopPropagation","undefined","classNames","ListGroup","horizontalVariant","useUncontrolled","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","ContactItem","data","setContact","setShowModal","map","deleteContact","ContactList","ContactForm","handleSubmit","contactName","Notify","addContact","isLoggedIn","useAuth","Loader","setFilter","to"],"sourceRoot":""}