{"version":3,"file":"static/js/203.49011bb2.chunk.js","mappings":"8RAEaA,EAAYC,EAAAA,GAAAA,IAAH,wCAITC,EAAQD,EAAAA,GAAAA,MAAH,sGAQLE,EAAQF,EAAAA,GAAAA,MAAH,2O,SCXLG,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MAEF,IAAK,QACHN,EAASM,GACT,MAEF,IAAK,WACHJ,EAAYI,KAgBlB,OACE,SAAChB,EAAD,WACE,kBAAMK,SAVU,SAAAS,GACdT,EAASS,KACXN,EAAQ,IACRE,EAAS,IACTE,EAAY,MAMZ,WACE,UAACV,EAAD,mBAEE,SAACC,EAAD,CACEa,MAAOT,EACPU,SAAUJ,EACVK,KAAK,OACLX,KAAK,OACLY,YAAY,kBACZC,UAAQ,QAIZ,UAAClB,EAAD,oBAEE,SAACC,EAAD,CACEa,MAAOP,EACPQ,SAAUJ,EACVK,KAAK,QACLX,KAAK,QACLY,YAAY,mBACZC,UAAQ,QAIZ,UAAClB,EAAD,uBAEE,SAACC,EAAD,CACEa,MAAOL,EACPM,SAAUJ,EACVK,KAAK,OACLX,KAAK,WACLY,YAAY,sBACZC,UAAQ,QAIZ,mBAAQF,KAAK,SAAb,2B,UCrBR,EAjDqB,WACnB,OAAkBG,EAAAA,EAAAA,MAAXC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMX,GAAN,gGACnBA,EAAMY,iBADa,EAGeZ,EAAMC,OAAhCR,EAHW,EAGXA,KAAME,EAHK,EAGLA,MAAOE,EAHF,EAGEA,SACfgB,EAAO,CACXpB,KAAMA,EAAKS,MACXP,MAAOA,EAAMO,MACbL,SAAUA,EAASK,OAPF,kBAWKM,EAAQK,GAXb,UAWXC,EAXW,OAYjBC,QAAQC,IAAIF,IACRA,EAAQG,MAbK,sBAcPH,EAAQG,MAAMC,OAdP,OAeR,MAfQ,uCAgBXC,EAAAA,OAAAA,QAAe,oCAhBJ,oCAqBXA,EAAAA,OAAAA,QAAe,yBArBJ,qDAyBfA,EAAAA,OAAAA,QAAe,wBAzBA,EA0BSL,EAAQM,KAAxBP,EA1BO,EA0BPA,KAAMQ,EA1BC,EA0BDA,MAERC,EAAe,CACnB7B,KAAMoB,EAAKpB,KACXE,MAAOkB,EAAKlB,MACZ0B,MAAOA,GAGTZ,GAASc,EAAAA,EAAAA,GAAQD,IAlCF,0DAqCjBH,EAAAA,OAAAA,QAAe,oBACfJ,QAAQC,IAAR,MAtCiB,0DAAH,sDA0ClB,OAAO,SAAC1B,EAAD,CAAcC,SAAUoB","sources":["components/RegisterForm/registerForm.module.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import css from 'styled-components';\n\nexport const Container = css.div`\npadding: 20px;\n`;\n\nexport const Label = css.label`\ndisplay: block;\nmargin-bottom: 20px;\n\nfont-size: 14px;\nfont-weight: 600;\n`;\n\nexport const Input = css.input`\ndisplay: flex;\nmargin-top: 6px;\npadding: 6px;\nwidth: 200px;\n\nborder: 1px solid var(--accent-color);\nborder-radius: 4px;\n\noutline: none;\n\n&:focus {\n    border: 1px solid var(--hover-border-color);\n}\n`;\n","import { useState } from 'react';\nimport { Container, Label, Input } from './registerForm.module';\n\nexport const RegisterForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleReset = event => {\n    if (onSubmit(event)) {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleReset}>\n        <Label>\n          Name\n          <Input\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter user name\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Email\n          <Input\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter user email\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            value={password}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"password\"\n            placeholder=\"Enter user password\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Sign up</button>\n      </form>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { useSignUpMutation } from '../../redux/auth/auth-slice';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { setUser } from '../../redux/user/user-actions';\n\nconst RegisterPage = () => {\n  const [addUser] = useSignUpMutation();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const { name, email, password } = event.target;\n    const user = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    try {\n      const payload = await addUser(user);\n      console.log(payload);\n      if (payload.error) {\n        switch (payload.error.status) {\n          case 400:\n            Notify.failure(\"Can't create user or user exists\");\n            break;\n\n          case 500:\n          default:\n            Notify.failure('Server is unavaliable');\n            break;\n        }\n      } else {\n        Notify.success('Success registration');\n        const { user, token } = payload.data;\n\n        const userLoggedIn = {\n          name: user.name,\n          email: user.email,\n          token: token,\n        };\n\n        dispatch(setUser(userLoggedIn));\n      }\n    } catch (error) {\n      Notify.failure('Unexpected error');\n      console.log(error);\n    }\n  };\n\n  return <RegisterForm onSubmit={handleSubmit} />;\n};\n\nexport default RegisterPage;\n"],"names":["Container","css","Label","Input","RegisterForm","onSubmit","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","onChange","type","placeholder","required","useSignUpMutation","addUser","dispatch","useDispatch","handleSubmit","preventDefault","user","payload","console","log","error","status","Notify","data","token","userLoggedIn","setUser"],"sourceRoot":""}