{"version":3,"file":"static/js/664.b1efbc49.chunk.js","mappings":"qTAIMA,EAAmBC,EAAAA,YAAiB,WAMvCC,GAAQ,IALTC,EAKS,EALTA,SACAC,EAIS,EAJTA,UAIS,IAFTC,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,OACjDO,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAH,OAAMN,EAAN,SACVO,EAAU,GAiBhB,OAhBAL,EAAYM,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYZ,EAAMU,UACjBV,EAAMU,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAQH,IAAaL,EAAb,WAAiCK,GAAa,GAChD,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,QAEtCI,EAAAA,EAAAA,KAAKhB,GAAD,QAAC,QACvBJ,IAAKA,GACFK,GAFmB,IAGtBH,UAAWmB,IAAAA,WAAA,GAAWnB,EAAWI,GAAtB,OAA4CO,UAG3Df,EAAIwB,YAAc,MAClB,Q,oBC9BaC,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACL,UAATD,EAAmBR,EAASS,GAASP,EAAYO,IAWnD,OACE,UAACC,EAAA,EAAD,CAAMC,SATa,SAAAL,GACnBA,EAAMM,iBACNT,GAASU,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KAExBD,EAAS,IACTE,EAAY,KAIkB1B,UAAU,YAAxC,WACE,UAAC,EAAD,YACE,SAACsC,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,UAACL,EAAA,QAAD,CAAYlC,UAAU,OAAOwC,UAAU,iBAAvC,WACE,SAACN,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACEO,KAAK,QACLT,KAAK,QACLU,YAAY,mBACZC,SAAUd,EACVI,MAAOV,EACPqB,UAAQ,KAEV,SAACV,EAAA,OAAD,CAAWlC,UAAU,aAArB,kEAMJ,SAACsC,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,UAACL,EAAA,QAAD,CAAYlC,UAAU,OAAOwC,UAAU,oBAAvC,WACE,SAACN,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEO,KAAK,WACLT,KAAK,WACLU,YAAY,sBACZC,SAAUd,EACVI,MAAOR,EACPmB,UAAQ,KAEV,SAACV,EAAA,OAAD,CAAWlC,UAAU,aAArB,wEAMN,gBAAKA,UAAU,SAAf,UACE,SAAC6C,EAAA,EAAD,CAAa7C,UAAU,OAAO8C,KAAK,KAAKL,KAAK,SAA7C,0B,mDC5DR,UAJkB,WAChB,OAAO,SAAC,IAAD","sources":["../node_modules/react-bootstrap/esm/Row.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { logIn } from 'redux/auth/auth-operations';\n\nimport { BasicButton } from 'components/BasicButton/BasicButton';\nimport { Form, Row, Col } from 'react-bootstrap';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === 'email' ? setEmail(value) : setPassword(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(logIn({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className=\"mb-3 mt-3\">\n      <Row>\n        <Col md>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter user email\"\n              onChange={handleChange}\n              value={email}\n              required\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n        </Col>\n\n        <Col md>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter user password\"\n              onChange={handleChange}\n              value={password}\n              required\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your password with anyone else.\n            </Form.Text>\n          </Form.Group>\n        </Col>\n      </Row>\n      <div className=\"d-grid\">\n        <BasicButton className=\"mt-1\" size=\"md\" type=\"submit\">\n          Login\n        </BasicButton>\n      </div>\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","name","value","Form","onSubmit","preventDefault","logIn","Col","md","controlId","type","placeholder","onChange","required","BasicButton","size"],"sourceRoot":""}